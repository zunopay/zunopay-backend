generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  Admin
  KycVerifier
  Indiviual
}

model User {
  id               Int                   @id @default(autoincrement())
  email            String                @unique
  password         String
  username         String                @unique
  avatar           String                @default("")
  role             Role                  @default(Indiviual)
  deletedAt        DateTime?
  lastLogin        DateTime?
  lastActiveAt     DateTime?
  emailVerifiedAt  DateTime?
  registryId       Int?                  @unique
  registry         KeyWalletRegistry?    @relation(fields: [registryId], references: [id])
  offrampProviders UserOfframpProvider[]
  nonce            String                @default(uuid())
  createdAt        DateTime              @default(now())
  region           SupportedRegion
  verifier         KycVerifier?
  verification     UserKycVerification?
  referrals        ReferralCode[]        @relation(name: "ReferrerCodes")
  referredBy       ReferralCode?         @relation("ReferredUser")
}

model ReferralCode {
  code       String @unique
  referrerId Int
  referrer   User   @relation("ReferrerCodes", fields: [referrerId], references: [id])
  refereeId  Int?   @unique
  referee    User?  @relation("ReferredUser", fields: [refereeId], references: [id])
}

model KycVerifier {
  id            Int                   @id @default(autoincrement())
  createdAt     DateTime              @default(now())
  deletedAt     DateTime?
  userId        Int                   @unique
  user          User                  @relation(fields: [userId], references: [id])
  verifiedUsers UserKycVerification[]
}

model UserKycVerification {
  id         Int         @id @default(autoincrement())
  verifierId Int
  verifier   KycVerifier @relation(fields: [verifierId], references: [id])
  userId     Int         @unique
  user       User        @relation(fields: [userId], references: [id])
  verifiedAt DateTime    @default(now())
}

model KeyWalletRegistry {
  id            Int     @id @default(autoincrement())
  commitment    String? @unique
  walletAddress String
  user          User?
}

enum SupportedRegion {
  EU
}

enum OfframpProvider {
  SpherePay
}

model UserOfframpProvider {
  id              Int             @id @default(autoincrement())
  userId          Int
  user            User            @relation(fields: [userId], references: [id])
  customerId      String
  bankAccountId   String
  walletAccountId String
  offrampProvider OfframpProvider
  kyc             Boolean         @default(false)

  @@unique([userId, offrampProvider])
}
