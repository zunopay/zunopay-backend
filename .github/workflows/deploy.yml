name: deploy
on:
  push:
    branches: [main]

jobs:
  docker-build:
    name: Docker Build
    runs-on: ubuntu-latest

    permissions:
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: set lower case envs
        run: echo "REPOSITORY=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]' | tr '/' '_')" >> $GITHUB_ENV

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Github Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/${{github.actor}}/${{env.REPOSITORY}}:latest,ghcr.io/${{github.actor}}/${{env.REPOSITORY}}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: docker-build

    steps:
      - name: set lower case envs
        run: echo "REPOSITORY=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]' | tr '/' '_')" >> $GITHUB_ENV

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.EC2_HOST}}
          username: ${{secrets.EC2_USERNAME}}
          key: ${{secrets.EC2_SECRET_KEY}}
          script: |
            docker stop ${{env.REPOSITORY}} || true
            docker rm ${{env.REPOSITORY}} || true
            docker pull ghcr.io/${{github.actor}}/${{env.REPOSITORY}}:latest
            docker run -d \
              --env DATABASE_URL=${{ secrets.DATABASE_URL }} \
              --env JWT_ACCESS_SECRET=${{ secrets.JWT_ACCESS_SECRET }} \
              --env JWT_REFRESH_SECRET=${{ secrets.JWT_REFRESH_SECRET }} \
              --env PRIVY_APP_ID=${{ secrets.PRIVY_APP_ID }} \
              --env PRIVY_APP_SECRET=${{ secrets.PRIVY_APP_SECRET }} \
              --env HELIUS_API_KEY=${{ secrets.HELIUS_API_KEY }} \
              --env SOLANA_CLUSTER=${{ secrets.SOLANA_CLUSTER }} \
              --env TREASURY_PRIVATE_KEY=${{ secrets.TREASURY_PRIVATE_KEY }} \
              --env TREASURY_SECRET=${{ secrets.TREASURY_SECRET }} \
              --name ${{env.REPOSITORY}} -p 80:3005 ghcr.io/${{github.actor}}/${{env.REPOSITORY}}:latest