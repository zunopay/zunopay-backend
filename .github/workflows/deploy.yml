name: deploy
on:
  push:
    branches: [main]

jobs:
  docker-build:
    name: Docker Build
    runs-on: ubuntu-latest

    permissions:
      packages: write

    steps:
      - name: Set ORG_NAME
        run: echo "ORG_NAME=${GITHUB_REPOSITORY%%/*}" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_TOKEN }}

      - name: set lower case envs
        run: echo "REPOSITORY=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]' | tr '/' '_')" >> $GITHUB_ENV

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Github Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{ secrets.GH_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/${{ env.ORG_NAME }}/${{env.REPOSITORY}}:latest,ghcr.io/${{ env.ORG_NAME }}/${{env.REPOSITORY}}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: docker-build

    steps:
      - name: Set ORG_NAME
        run: echo "ORG_NAME=${GITHUB_REPOSITORY%%/*}" >> $GITHUB_ENV

      - name: set lower case envs
        run: echo "REPOSITORY=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]' | tr '/' '_')" >> $GITHUB_ENV

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SECRET_KEY }}
          script: |
            set -e
            echo "Starting deployment..."
            echo "Organization: ${{ env.ORG_NAME }}"
            echo "Repository: ${{ env.REPOSITORY }}"
      
            echo "Stopping any running container with name ${{ env.REPOSITORY }}..."
            docker stop ${{ env.REPOSITORY }} || true
      
            echo "Removing any stopped container with name ${{ env.REPOSITORY }}..."
            docker rm ${{ env.REPOSITORY }} || true
      
            echo "Pulling the latest Docker image from GitHub CR..."
            docker pull ghcr.io/${{ env.ORG_NAME }}/${{ env.REPOSITORY }}:latest

            echo "Running Docker container..."
            docker run -d \
              --env "DATABASE_URL=${{ secrets.DATABASE_URL }}" \
              --env "JWT_ACCESS_SECRET=${{ secrets.JWT_ACCESS_SECRET }}" \
              --env "JWT_REFRESH_SECRET=${{ secrets.JWT_REFRESH_SECRET }}" \
              --env "PRIVY_APP_ID=${{ secrets.PRIVY_APP_ID }}" \
              --env "PRIVY_APP_SECRET=${{ secrets.PRIVY_APP_SECRET }}" \
              --env "HELIUS_API_KEY=${{ secrets.HELIUS_API_KEY }}" \
              --env "SOLANA_CLUSTER=${{ secrets.SOLANA_CLUSTER }}" \
              --env "TREASURY_PRIVATE_KEY=${{ secrets.TREASURY_PRIVATE_KEY }}" \
              --env "TREASURY_SECRET=${{ secrets.TREASURY_SECRET }}" \
              --name ${{ env.REPOSITORY }} -p 3005:3005 ghcr.io/${{ env.ORG_NAME }}/${{ env.REPOSITORY }}:latest

            echo "Cleaning up dangling Docker images that are 12 hours older"
            docker image prune --filter "until=12h" -f